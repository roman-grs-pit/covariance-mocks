# YAML Schema for Production Configuration
# Defines the structure and validation rules for production configuration files

production:
  type: object
  required: [name, version, description]
  properties:
    name:
      type: string
      pattern: "^[a-zA-Z][a-zA-Z0-9._-]*$"
      description: "Production identifier (alphanumeric, dot, underscore, hyphen)"
    version:
      type: string
      pattern: "^v\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9_-]+)?$"
      description: "Version string (e.g., v1.0, v2.1.3, v1.0-beta)"
    description:
      type: string
      minLength: 10
      maxLength: 500
      description: "Human-readable production description"
    tags:
      type: array
      items:
        type: string
      description: "Optional tags for categorization"
    dependencies:
      type: object
      description: "Dependency version tracking for reproducibility"
      properties:
        rgrspit_diffsky:
          type: string
          description: "rgrspit_diffsky package version (auto-detected if not specified)"
        record_environment:
          type: boolean
          default: true
          description: "Whether to record full environment information"

science:
  type: object
  required: [cosmology, redshifts, realizations]
  properties:
    cosmology:
      type: string
      enum: ["AbacusSummit", "Planck18", "WMAP9", "custom"]
      description: "Cosmological parameter set"
    redshifts:
      type: array
      items:
        type: number
        minimum: 0.0
        maximum: 10.0
      minItems: 1
      description: "Target redshift values"
    realizations:
      type: object
      required: [start, count]
      properties:
        start:
          type: integer
          minimum: 0
          description: "Starting realization number"
        count:
          type: integer
          minimum: 1
          maximum: 10000
          description: "Number of realizations to generate"
        step:
          type: integer
          minimum: 1
          default: 1
          description: "Step size between realizations"
    catalog_params:
      type: object
      description: "Additional scientific parameters"
      properties:
        magnitude_limit:
          type: number
          description: "Magnitude limit for catalog"
        area_deg2:
          type: number
          minimum: 0.0
          description: "Survey area in square degrees"

execution:
  type: object
  required: [job_type, batch_size]
  properties:
    job_type:
      type: string
      enum: ["cpu_intensive", "gpu_intensive", "memory_intensive", "io_intensive", "balanced"]
      description: "Declarative job resource type"
    batch_size:
      type: integer
      minimum: 1
      maximum: 1000
      description: "Number of jobs per SLURM array batch"
    timeout_hours:
      type: number
      minimum: 0.1
      maximum: 72.0
      default: 12.0
      description: "Maximum job runtime in hours"
    retry_policy:
      type: object
      properties:
        max_retries:
          type: integer
          minimum: 0
          maximum: 10
          default: 3
        backoff_multiplier:
          type: number
          minimum: 1.0
          maximum: 10.0
          default: 2.0
        initial_delay_minutes:
          type: number
          minimum: 1.0
          maximum: 60.0
          default: 5.0

resources:
  type: object
  description: "Machine-specific resource requirements"
  properties:
    account:
      type: string
      description: "SLURM account for billing"
    partition:
      type: string
      description: "SLURM partition"
    constraint:
      type: string
      description: "Node constraints (e.g., 'gpu', 'haswell')"
    nodes_per_job:
      type: integer
      minimum: 1
      maximum: 100
      default: 1
    tasks_per_node:
      type: integer
      minimum: 1
      maximum: 128
      default: 1
    cpus_per_task:
      type: integer
      minimum: 1
      maximum: 128
      default: 1
    memory_gb:
      type: number
      minimum: 1.0
      maximum: 1000.0
      description: "Memory requirement in GB"
    gpus_per_node:
      type: integer
      minimum: 0
      maximum: 8
      default: 0

outputs:
  type: object
  required: [base_path]
  properties:
    base_path:
      type: string
      description: "Base directory for production outputs"
    structure:
      type: string
      enum: ["flat", "hierarchical", "custom"]
      default: "hierarchical"
      description: "Output directory organization"
    compression:
      type: string
      enum: ["none", "gzip", "lzf"]
      default: "gzip"
      description: "HDF5 compression method"
    cleanup_policy:
      type: object
      properties:
        keep_logs_days:
          type: integer
          minimum: 1
          maximum: 365
          default: 30
        keep_intermediate:
          type: boolean
          default: false
        archive_completed:
          type: boolean
          default: false